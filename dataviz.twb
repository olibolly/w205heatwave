<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0708.1543                                -->
<workbook source-build='9.3.4 (9300.16.0708.1543)' source-platform='mac' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='w205-finaprojectheatwave' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='predictions (heatwave)' inline='true' name='bigquery.0rval2611a1rt018zcsu10kshrx8' version='9.3'>
      <connection CATALOG='crested-trilogy-136023' EXECCATALOG='crested-trilogy-136023' REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email' authentication='yes' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-bql' connection-protocol='native-api' odbc-connect-string-extras='' project='My First Project' schema='heatwave' server='googleapis.com/bigquery' server-oauth='' tablename='predictions' username='zimmer.olivier@gmail.com'>
        <relation name='predictions' table='[crested-trilogy-136023:heatwave].[predictions]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>preds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[preds]</local-name>
            <parent-name>[predictions]</parent-name>
            <remote-alias>preds</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[predictions]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Preds' datatype='real' name='[preds]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ozimmer/Documents/My Tableau Repository/Datasources/predictions (heatwave).tde' schema='Extract' tablename='Extract' update-time='08/22/2016 08:07:44 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='200' timestamp-start='2016-08-22 08:07:44.417' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>200.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>preds</remote-name>
              <remote-type>4</remote-type>
              <local-name>[preds]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>preds</remote-alias>
              <ordinal>1</ordinal>
              <family>predictions</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1136920.875</statistic>
                <statistic aggregation='Avg' datatype='real'>5684.6043749999999</statistic>
                <statistic aggregation='Min' datatype='real'>286.6875</statistic>
                <statistic aggregation='Max' datatype='real'>22006.09375</statistic>
                <statistic aggregation='Stdev' datatype='real'>3919.6003227116098</statistic>
                <statistic aggregation='StdevP' datatype='real'>3909.7890424359157</statistic>
                <statistic aggregation='Var' datatype='real'>15363266.689800957</statistic>
                <statistic aggregation='VarP' datatype='real'>15286450.356351953</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9520235451.3242188</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>2</ordinal>
              <family>predictions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>200</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;NC&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.464993' measure-ordering='alphabetic' measure-percentage='0.535007' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='weather_state_price_outage (heatwave)' inline='true' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' version='9.3'>
      <connection CATALOG='crested-trilogy-136023' EXECCATALOG='crested-trilogy-136023' REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email' authentication='yes' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-bql' connection-protocol='native-api' odbc-connect-string-extras='' project='My First Project' schema='heatwave' server='googleapis.com/bigquery' server-oauth='' tablename='weather_state_price' username='zimmer.olivier@gmail.com'>
        <relation name='weather_state_price_outage' table='[crested-trilogy-136023:heatwave].[weather_state_price_outage]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SECTOR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SECTOR]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>SECTOR</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customers_outage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customers_outage]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>customers_outage</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_temps</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_temps]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>avg_temps</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_elec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_elec]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>price_elec</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generated_elec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generated_elec]</local-name>
            <parent-name>[weather_state_price_outage]</parent-name>
            <remote-alias>generated_elec</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sector' datatype='string' name='[SECTOR]' role='dimension' type='nominal' />
      <column caption='Avg Temps' datatype='real' name='[avg_temps]' role='measure' type='quantitative' />
      <column caption='Customers Outage' datatype='integer' name='[customers_outage]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
      <column caption='Generated Elec' datatype='real' name='[generated_elec]' role='measure' type='quantitative' />
      <column caption='Price Elec' datatype='real' name='[price_elec]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ozimmer/Documents/My Tableau Repository/Datasources/weather_state_price_outage (heatwave).tde' schema='Extract' tablename='Extract' update-time='08/22/2016 08:26:18 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='8832' timestamp-start='2016-08-22 08:26:18.464' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECTOR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SECTOR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECTOR</remote-alias>
              <ordinal>1</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;RES&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;RES&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;RES&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_temps</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_temps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_temps</remote-alias>
              <ordinal>2</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7724</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>160389.40056563821</statistic>
                <statistic aggregation='Avg' datatype='real'>18.160031766942733</statistic>
                <statistic aggregation='Min' datatype='real'>-20.306666666666665</statistic>
                <statistic aggregation='Max' datatype='real'>41.964285714285715</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.196076539047978</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.195442685250711</statistic>
                <statistic aggregation='Var' datatype='real'>125.35212986822054</statistic>
                <statistic aggregation='VarP' datatype='real'>125.33793691873365</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4019661.2682191478</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>customers_outage</remote-name>
              <remote-type>3</remote-type>
              <local-name>[customers_outage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>customers_outage</remote-alias>
              <ordinal>3</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>569</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>6176491</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>4</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>184</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2001-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-04-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='date'>#2008-09-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>generated_elec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[generated_elec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>generated_elec</remote-alias>
              <ordinal>5</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8832</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>61309827.904530041</statistic>
                <statistic aggregation='Avg' datatype='real'>6941.7830507846511</statistic>
                <statistic aggregation='Min' datatype='real'>114.68043</statistic>
                <statistic aggregation='Max' datatype='real'>48328.291380000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>6175.0481932816092</statistic>
                <statistic aggregation='StdevP' datatype='real'>6174.6985995884997</statistic>
                <statistic aggregation='Var' datatype='real'>38131220.189350463</statistic>
                <statistic aggregation='VarP' datatype='real'>38126902.795760185</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>762336329686.34448</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_elec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_elec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_elec</remote-alias>
              <ordinal>6</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1366</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.9500000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>23.079999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>weather_state_price_outage</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.453104' measure-ordering='alphabetic' measure-percentage='0.546896' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[qr:date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:date:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='weather_state_price (heatwave)' inline='true' name='bigquery.0z84mge1faeh9h1d5xo800b2kgn1' version='9.3'>
      <connection CATALOG='crested-trilogy-136023' EXECCATALOG='crested-trilogy-136023' REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email' authentication='yes' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-bql' connection-protocol='native-api' odbc-connect-string-extras='' project='My First Project' schema='heatwave' server='googleapis.com/bigquery' server-oauth='' tablename='weather_state_price' username='zimmer.olivier@gmail.com'>
        <relation name='weather_state_price' table='[crested-trilogy-136023:heatwave].[weather_state_price]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>SECTOR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SECTOR]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>SECTOR</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_temp]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>avg_temp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price_elec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price_elec]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>price_elec</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generated_elec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[generated_elec]</local-name>
            <parent-name>[weather_state_price]</parent-name>
            <remote-alias>generated_elec</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sector' datatype='string' name='[SECTOR]' role='dimension' type='nominal' />
      <column caption='Avg Temp' datatype='real' name='[avg_temp]' role='measure' type='quantitative' />
      <column aggregation='Count' caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
      <column caption='Generated Elec' datatype='real' name='[generated_elec]' role='measure' type='quantitative' />
      <column caption='Price Elec' datatype='real' name='[price_elec]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ozimmer/Documents/My Tableau Repository/Datasources/weather_state_price (heatwave).tde' schema='Extract' tablename='Extract' update-time='08/22/2016 10:11:32 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='8832' timestamp-start='2016-08-22 22:11:32.658' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SECTOR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SECTOR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SECTOR</remote-alias>
              <ordinal>1</ordinal>
              <family>weather_state_price</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;RES&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;RES&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;RES&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_temp</remote-alias>
              <ordinal>2</ordinal>
              <family>weather_state_price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7724</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>160389.40056563803</statistic>
                <statistic aggregation='Avg' datatype='real'>18.160031766942712</statistic>
                <statistic aggregation='Min' datatype='real'>-20.306666666666665</statistic>
                <statistic aggregation='Max' datatype='real'>41.964285714285715</statistic>
                <statistic aggregation='Stdev' datatype='real'>11.196076539047969</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.195442685250702</statistic>
                <statistic aggregation='Var' datatype='real'>125.35212986822035</statistic>
                <statistic aggregation='VarP' datatype='real'>125.33793691873346</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4019661.2682191404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>weather_state_price</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>184</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2001-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-04-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='date'>#2008-09-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>generated_elec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[generated_elec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>generated_elec</remote-alias>
              <ordinal>4</ordinal>
              <family>weather_state_price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8832</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>61309827.904530011</statistic>
                <statistic aggregation='Avg' datatype='real'>6941.7830507846484</statistic>
                <statistic aggregation='Min' datatype='real'>114.68043</statistic>
                <statistic aggregation='Max' datatype='real'>48328.291380000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>6175.0481932815792</statistic>
                <statistic aggregation='StdevP' datatype='real'>6174.6985995884706</statistic>
                <statistic aggregation='Var' datatype='real'>38131220.189350098</statistic>
                <statistic aggregation='VarP' datatype='real'>38126902.795759819</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>762336329686.34082</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price_elec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[price_elec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price_elec</remote-alias>
              <ordinal>5</ordinal>
              <family>weather_state_price</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1366</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>4.9500000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>23.079999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>weather_state_price</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>8832</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;NC&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.464043' measure-ordering='alphabetic' measure-percentage='0.535957' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='correlation_by_state (heatwave)' inline='true' name='bigquery.17kdwy20fooqbs1dx2bb41h461lj' version='9.3'>
      <connection CATALOG='crested-trilogy-136023' EXECCATALOG='crested-trilogy-136023' REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email' authentication='yes' bq-fetch-rows='' bq-fetch-tasks='' bq-large-fetch-rows='' bq-response-rows='' class='bigquery' connection-dialect='google-bql' connection-protocol='native-api' odbc-connect-string-extras='' project='My First Project' schema='heatwave' server='googleapis.com/bigquery' server-oauth='' tablename='weather_state_price' username='zimmer.olivier@gmail.com'>
        <relation name='correlation_by_state' table='[crested-trilogy-136023:heatwave].[correlation_by_state]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corr_temp_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[corr_temp_price]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>corr_temp_price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corr_temp_generated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[corr_temp_generated]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>corr_temp_generated</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corr_price_generated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[corr_price_generated]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>corr_price_generated</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_temp]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>avg_temp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>std_temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[std_temp]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>std_temp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>std_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[std_price]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>std_price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>std_generated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[std_generated]</local-name>
            <parent-name>[correlation_by_state]</parent-name>
            <remote-alias>std_generated</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Avg Price' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
      <column caption='Avg Temp' datatype='real' name='[avg_temp]' role='measure' type='quantitative' />
      <column caption='Corr Price Generated' datatype='real' name='[corr_price_generated]' role='measure' type='quantitative' />
      <column caption='Corr Temp Generated' datatype='real' name='[corr_temp_generated]' role='measure' type='quantitative' />
      <column caption='Corr Temp Price' datatype='real' name='[corr_temp_price]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Std Generated' datatype='real' name='[std_generated]' role='measure' type='quantitative' />
      <column caption='Std Price' datatype='real' name='[std_price]' role='measure' type='quantitative' />
      <column caption='Std Temp' datatype='real' name='[std_temp]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ozimmer/Documents/My Tableau Repository/Datasources/correlation_by_state (heatwave).tde' schema='Extract' tablename='Extract' update-time='08/22/2016 10:09:58 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='48' timestamp-start='2016-08-22 22:09:58.707' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>48.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>48.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_price</remote-alias>
              <ordinal>1</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>506.86423913043467</statistic>
                <statistic aggregation='Avg' datatype='real'>10.559671648550722</statistic>
                <statistic aggregation='Min' datatype='real'>7.5121195652173913</statistic>
                <statistic aggregation='Max' datatype='real'>16.899130434782613</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.4805054231852046</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.4545308286378229</statistic>
                <statistic aggregation='Var' datatype='real'>6.1529071544512117</statistic>
                <statistic aggregation='VarP' datatype='real'>6.0247215887334784</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5641.5065718690921</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_temp</remote-alias>
              <ordinal>2</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>871.68152481325149</statistic>
                <statistic aggregation='Avg' datatype='real'>18.16003176694274</statistic>
                <statistic aggregation='Min' datatype='real'>10.760613591557471</statistic>
                <statistic aggregation='Max' datatype='real'>27.536737297789909</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2065542874595092</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.1625053847491875</statistic>
                <statistic aggregation='Var' datatype='real'>17.695098973343981</statistic>
                <statistic aggregation='VarP' datatype='real'>17.326451078065979</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>16661.433833012899</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corr_price_generated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[corr_price_generated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corr_price_generated</remote-alias>
              <ordinal>3</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6.4735603611234449</statistic>
                <statistic aggregation='Avg' datatype='real'>0.13486584085673844</statistic>
                <statistic aggregation='Min' datatype='real'>-0.65058142920219619</statistic>
                <statistic aggregation='Max' datatype='real'>0.65762835116748397</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.34867871413657697</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.34502752751051824</statistic>
                <statistic aggregation='Var' datatype='real'>0.12157684569193677</statistic>
                <statistic aggregation='VarP' datatype='real'>0.11904399474002142</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6.5871739089607928</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corr_temp_generated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[corr_temp_generated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corr_temp_generated</remote-alias>
              <ordinal>4</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11.070750359685748</statistic>
                <statistic aggregation='Avg' datatype='real'>0.2306406324934531</statistic>
                <statistic aggregation='Min' datatype='real'>-0.51846194834118575</statistic>
                <statistic aggregation='Max' datatype='real'>0.72922029036432523</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.24679555528865055</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.24421123742149303</statistic>
                <statistic aggregation='Var' datatype='real'>0.060908046110233371</statistic>
                <statistic aggregation='VarP' datatype='real'>0.059639128482936843</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.4160430323160123</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>corr_temp_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[corr_temp_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>corr_temp_price</remote-alias>
              <ordinal>5</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9.3771195020955389</statistic>
                <statistic aggregation='Avg' datatype='real'>0.19535665629365706</statistic>
                <statistic aggregation='Min' datatype='real'>-0.086496822874726959</statistic>
                <statistic aggregation='Max' datatype='real'>0.51515134161507181</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.14395687635541202</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14244943296879853</statistic>
                <statistic aggregation='Var' datatype='real'>0.02072358225000738</statistic>
                <statistic aggregation='VarP' datatype='real'>0.020291840953132228</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.8058910773457737</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>correlation_by_state</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AL&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;NC&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>std_generated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[std_generated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>std_generated</remote-alias>
              <ordinal>7</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>45553.994264832123</statistic>
                <statistic aggregation='Avg' datatype='real'>949.04154718400252</statistic>
                <statistic aggregation='Min' datatype='real'>134.3541936830245</statistic>
                <statistic aggregation='Max' datatype='real'>5154.6551482678469</statistic>
                <statistic aggregation='Stdev' datatype='real'>830.71790217405498</statistic>
                <statistic aggregation='StdevP' datatype='real'>822.019045686769</statistic>
                <statistic aggregation='Var' datatype='real'>690092.23299246281</statistic>
                <statistic aggregation='VarP' datatype='real'>675715.31147178647</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>75666968.148153201</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>std_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[std_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>std_price</remote-alias>
              <ordinal>8</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>83.529679415233545</statistic>
                <statistic aggregation='Avg' datatype='real'>1.7402016544840322</statistic>
                <statistic aggregation='Min' datatype='real'>0.98731211992106493</statistic>
                <statistic aggregation='Max' datatype='real'>3.6793346950784693</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.51937798515649714</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.51393932235206241</statistic>
                <statistic aggregation='Var' datatype='real'>0.26975349146522254</statistic>
                <statistic aggregation='VarP' datatype='real'>0.26413362705969706</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>158.03690041577568</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>std_temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[std_temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>std_temp</remote-alias>
              <ordinal>9</ordinal>
              <family>correlation_by_state</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>491.31725579567944</statistic>
                <statistic aggregation='Avg' datatype='real'>10.235776162409989</statistic>
                <statistic aggregation='Min' datatype='real'>4.6242426602502942</statistic>
                <statistic aggregation='Max' datatype='real'>14.511678746455578</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.977903181750343</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9571915829286921</statistic>
                <statistic aggregation='Var' datatype='real'>3.9121009963781304</statistic>
                <statistic aggregation='VarP' datatype='real'>3.8305988922869196</statistic>
                <statistic aggregation='Count' datatype='integer'>48</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5212.8822018838782</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.377205' measure-ordering='alphabetic' measure-percentage='0.622795' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='power_outage_v5' inline='true' name='textscan.1e9d30q0keyo9116m4eh91gbivbc' version='9.3'>
      <connection class='textscan' directory='/Users/ozimmer/Google Drive/Berkeley/W205/finalproject' filename='power_outage_v5.csv' password='' server=''>
        <relation name='power_outage_v5.csv' table='[power_outage_v5#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date_event_began' ordinal='2' />
            <column datatype='string' name='geographic_areas_revised' ordinal='3' />
            <column datatype='integer' name='num_customers_affected' ordinal='4' />
            <column datatype='string' name='state' ordinal='5' />
            <column datatype='date' name='date' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_event_began</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_event_began]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>date_event_began</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographic_areas_revised</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geographic_areas_revised]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>geographic_areas_revised</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_customers_affected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_customers_affected]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>num_customers_affected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[power_outage_v5.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date Event Began' datatype='date' name='[date_event_began]' role='dimension' type='ordinal' />
      <column caption='Geographic Areas Revised' datatype='string' name='[geographic_areas_revised]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Num Customers Affected' datatype='integer' name='[num_customers_affected]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ozimmer/Documents/My Tableau Repository/Datasources/power_outage_v5.tde' schema='Extract' tablename='Extract' update-time='08/22/2016 10:10:24 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1703' timestamp-start='2016-08-22 22:10:23.845' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1703.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1703.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>157</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2000-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-06-01#</statistic>
                <statistic aggregation='Count' datatype='integer'>1627</statistic>
                <statistic aggregation='Median' datatype='date'>#2010-02-01#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_event_began</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_event_began]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_event_began</remote-alias>
              <ordinal>2</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>900</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2000-01-23#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-06-30#</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geographic_areas_revised</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geographic_areas_revised]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geographic_areas_revised</remote-alias>
              <ordinal>3</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>96</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>16</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>4</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10674.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6.2677627715795659</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.223180963063955</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.2222344996863144</statistic>
                <statistic aggregation='Var' datatype='real'>10.388895520657885</statistic>
                <statistic aggregation='VarP' datatype='real'>10.382795170968713</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>84584.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_customers_affected</remote-name>
              <remote-type>3</remote-type>
              <local-name>[num_customers_affected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_customers_affected</remote-alias>
              <ordinal>5</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>676</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>276778148.0</statistic>
                <statistic aggregation='Avg' datatype='real'>162523.86846741044</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>4645572</statistic>
                <statistic aggregation='Stdev' datatype='real'>357892.16248619335</statistic>
                <statistic aggregation='StdevP' datatype='real'>357787.07008560537</statistic>
                <statistic aggregation='Var' datatype='real'>128086799969.04381</statistic>
                <statistic aggregation='VarP' datatype='real'>128011587520.44189</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>262986788867518.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#N/A&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>7</ordinal>
              <family>power_outage_v5.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3421170.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2008.9078097475044</statistic>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>2014</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.5088042806127575</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.5077739460491806</statistic>
                <statistic aggregation='Var' datatype='real'>12.311707479646412</statistic>
                <statistic aggregation='VarP' datatype='real'>12.30447805658144</statistic>
                <statistic aggregation='Count' datatype='integer'>1703</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6872836086.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.50066' measure-ordering='alphabetic' measure-percentage='0.499339' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='correlation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Correlation between Temperature and Electricity Price by State (01-16)</run>
            <run bold='false' fontsize='8'>&#10;Source: </run>
            <run bold='false' fontcolor='#222222' fontname='Pontano Sans' fontsize='8'>energy Information Administration</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='correlation_by_state (heatwave)' name='bigquery.17kdwy20fooqbs1dx2bb41h461lj' />
          </datasources>
          <datasource-dependencies datasource='bigquery.17kdwy20fooqbs1dx2bb41h461lj'>
            <column caption='Corr Temp Price' datatype='real' name='[corr_temp_price]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[corr_temp_price]' derivation='Sum' name='[sum:corr_temp_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]' direction='DESC' using='[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='wrap' id='refline0' value='on' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-pattern' id='refline1' value='dashed' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-pattern' id='refline2' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='computation' probability='95' scope='per-pane' value-column='[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</rows>
        <cols>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='correlation and temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Correlation of temperature (C) and price of electricity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='correlation_by_state (heatwave)' name='bigquery.17kdwy20fooqbs1dx2bb41h461lj' />
          </datasources>
          <datasource-dependencies datasource='bigquery.17kdwy20fooqbs1dx2bb41h461lj'>
            <column caption='Avg Temp' datatype='real' name='[avg_temp]' role='measure' type='quantitative' />
            <column caption='Corr Temp Price' datatype='real' name='[corr_temp_price]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_temp]' derivation='Sum' name='[sum:avg_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[corr_temp_price]' derivation='Sum' name='[sum:corr_temp_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='stroke-color' id='annotation_3' value='#686868' />
            <format attr='border-style' id='annotation_4' value='none' />
            <format attr='stroke-color' id='annotation_4' value='#686868' />
            <format attr='border-color' id='annotation_5' value='#686868' />
            <format attr='border-style' id='annotation_5' value='none' />
            <format attr='stroke-color' id='annotation_5' value='#686868' />
            <format attr='border-style' id='annotation_6' value='none' />
            <format attr='stroke-color' id='annotation_6' value='#686868' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
          </pane>
        </panes>
        <rows>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</rows>
        <cols>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
                  <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                  <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;FL&quot;</value>
                <value>27.536737297789909</value>
                <value>0.093184752400824855</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'>&lt;[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]&gt;</run>
              <run fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;FL&quot;</value>
                    <value>27.536737297789909</value>
                    <value>0.093184752400824855</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-47' y='25' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'>&lt;[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;ND&quot;</value>
                    <value>10.760613591557471</value>
                    <value>0.51515134161507181</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='110' y='-16' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'>&lt;[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;OK&quot;</value>
                    <value>22.091529461937579</value>
                    <value>0.44240426673912819</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run bold='true'>&lt;[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:avg_temp:qk]</field>
                      <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[sum:corr_temp_price:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;MA&quot;</value>
                    <value>15.806405318715104</value>
                    <value>-0.086496822874726959</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='114' y='-5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='correlation outage'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Outage and temperature correlation&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price_outage (heatwave)' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' />
          </datasources>
          <datasource-dependencies datasource='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41'>
            <column-instance column='[avg_temps]' derivation='Avg' name='[avg:avg_temps:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Temps' datatype='real' name='[avg_temps]' role='measure' type='quantitative' />
            <column caption='Customers Outage' datatype='integer' name='[customers_outage]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customers_outage]' derivation='Sum' name='[sum:customers_outage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[mn:date:ok]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]</rows>
        <cols>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[avg:avg_temps:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[avg:avg_temps:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[avg:avg_temps:qk]</field>
                  <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[mn:date:ok]</field>
                  <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>29.593800242222954</value>
                <value>9</value>
                <value>38795898</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='geo'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Overview of temperature variation (C) per state (01-16)</run>
            <run bold='false' fontsize='8'>&#10;Source: g</run>
            <run bold='false' fontcolor='#222222' fontname='Pontano Sans' fontsize='8'>lobal Historical Climatology Network</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price (heatwave)' name='bigquery.0z84mge1faeh9h1d5xo800b2kgn1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='bigquery.0z84mge1faeh9h1d5xo800b2kgn1'>
            <column-instance column='[avg_temp]' derivation='Avg' name='[avg:avg_temp:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Temp' datatype='real' name='[avg_temp]' role='measure' type='quantitative' />
            <column aggregation='Count' caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Quarter' name='[qr:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[Longitude (generated)]' field-type='quantitative' max='-4040675.3157861326' min='-15751521.650005145' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[Latitude (generated)]' field-type='quantitative' max='8310040.9685890134' min='646569.17637265404' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[avg:avg_temp:qk]' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk]' />
              <color column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[avg:avg_temp:qk]' />
              <geometry column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[Latitude (generated)]</rows>
        <cols>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[Longitude (generated)]</cols>
        <pages>
          <column>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[qr:date:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='outage TS'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Outage in US by customers affected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='power_outage_v5' name='textscan.1e9d30q0keyo9116m4eh91gbivbc' />
          </datasources>
          <datasource-dependencies datasource='textscan.1e9d30q0keyo9116m4eh91gbivbc'>
            <column caption='Date Event Began' datatype='date' name='[date_event_began]' role='dimension' type='ordinal' />
            <column caption='Num Customers Affected' datatype='integer' name='[num_customers_affected]' role='measure' type='quantitative' />
            <column-instance column='[num_customers_affected]' derivation='Sum' name='[sum:num_customers_affected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_event_began]' derivation='Month-Trunc' name='[tmn:date_event_began:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_1' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</rows>
        <cols>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'>&lt;[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>8648624</value>
                    <value>#2003-08-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-16' y='-41' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>&lt;</run>
              <run bold='true'>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>11367600</value>
                    <value>#2004-09-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-22' y='-59' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>&lt;</run>
              <run bold='true'>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</run>
              <run bold='true'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>13995666</value>
                    <value>#2008-09-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='8' y='-47' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='95'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='1'>&lt;[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]&gt;</run>
              <run fontalignment='1' fontcolor='#787878'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]</field>
                      <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[tmn:date_event_began:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>24589118</value>
                    <value>#2012-06-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-79' y='5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='outage TS per state'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Outage per state by volume of affected household</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='power_outage_v5' name='textscan.1e9d30q0keyo9116m4eh91gbivbc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.1e9d30q0keyo9116m4eh91gbivbc'>
            <column caption='Geographic Areas Revised' datatype='string' name='[geographic_areas_revised]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[geographic_areas_revised]' derivation='None' name='[none:geographic_areas_revised:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Num Customers Affected' datatype='integer' name='[num_customers_affected]' role='measure' type='quantitative' />
            <column-instance column='[num_customers_affected]' derivation='Sum' name='[sum:num_customers_affected:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2003' />
              <groupfilter function='member' level='[none:year:ok]' member='2004' />
              <groupfilter function='member' level='[none:year:ok]' member='2008' />
              <groupfilter function='member' level='[none:year:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[Longitude (generated)]' field-type='quantitative' max='-6568012.6654108437' min='-14790641.500157416' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[Latitude (generated)]' field-type='quantitative' max='7974292.6058415687' min='2371699.8126274706' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]' />
              <lod column='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:geographic_areas_revised:nk]' />
              <size column='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[Latitude (generated)]</rows>
        <cols>([textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:year:ok] * [textscan.1e9d30q0keyo9116m4eh91gbivbc].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='outage forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Forecast of temperature and outages</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price_outage (heatwave)' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' />
          </datasources>
          <datasource-dependencies datasource='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41'>
            <column caption='Avg Temps' datatype='real' name='[avg_temps]' role='measure' type='quantitative' />
            <column caption='Customers Outage' datatype='integer' name='[customers_outage]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[avg_temps]' derivation='Sum' forecast-column-base='[sum:avg_temps:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_temps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customers_outage]' derivation='Sum' forecast-column-base='[sum:customers_outage:qk]' forecast-column-type='forecast-value' name='[fVal:sum:customers_outage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_temps]' derivation='Sum' name='[sum:avg_temps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[customers_outage]' derivation='Sum' name='[sum:customers_outage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:avg_temps:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='4' y-axis-name='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:customers_outage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:avg_temps:qk] + [bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:customers_outage:qk])</rows>
        <cols>([bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk] * [bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[tmn:date:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='stream - outage '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>STREAM - current outage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price_outage (heatwave)' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41'>
            <column caption='Customers Outage' datatype='integer' name='[customers_outage]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[customers_outage]' derivation='Sum' name='[sum:customers_outage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]'>
            <groupfilter from='2001' function='range' level='[yr:date:ok]' to='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[Longitude (generated)]' field-type='quantitative' max='-6541430.7948919181' min='-14797958.958752643' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[Latitude (generated)]' field-type='quantitative' max='7455027.7863611784' min='1706688.4382359213' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' palette='tableau-orange' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]' />
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' />
              <geometry column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[Latitude (generated)]</rows>
        <cols>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='stream - sales electricity'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>STREAM - future electricity production</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='predictions (heatwave)' name='bigquery.0rval2611a1rt018zcsu10kshrx8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='bigquery.0rval2611a1rt018zcsu10kshrx8'>
            <column-instance column='[preds]' derivation='Max' name='[max:preds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Preds' datatype='real' name='[preds]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[bigquery.0rval2611a1rt018zcsu10kshrx8].[Longitude (generated)]' field-type='quantitative' max='-7035686.3826793283' min='-14005970.946001574' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[bigquery.0rval2611a1rt018zcsu10kshrx8].[Latitude (generated)]' field-type='quantitative' max='7497892.2245677263' min='2645058.1727984552' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[bigquery.0rval2611a1rt018zcsu10kshrx8].[max:preds:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[bigquery.0rval2611a1rt018zcsu10kshrx8].[none:state:nk]' />
              <color column='[bigquery.0rval2611a1rt018zcsu10kshrx8].[max:preds:qk]' />
              <geometry column='[bigquery.0rval2611a1rt018zcsu10kshrx8].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[bigquery.0rval2611a1rt018zcsu10kshrx8].[Latitude (generated)]</rows>
        <cols>[bigquery.0rval2611a1rt018zcsu10kshrx8].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='stream - temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>STREAM - overview per state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price_outage (heatwave)' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' />
          </datasources>
          <datasource-dependencies datasource='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41'>
            <column caption='Avg Temps' datatype='real' name='[avg_temps]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[avg_temps]' derivation='Sum' forecast-column-base='[sum:avg_temps:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_temps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[generated_elec]' derivation='Sum' forecast-column-base='[sum:generated_elec:qk]' forecast-column-type='forecast-value' name='[fVal:sum:generated_elec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_elec]' derivation='Sum' forecast-column-base='[sum:price_elec:qk]' forecast-column-type='forecast-value' name='[fVal:sum:price_elec:qk]' pivot='key' type='quantitative' />
            <column caption='Generated Elec' datatype='real' name='[generated_elec]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Price Elec' datatype='real' name='[price_elec]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_temps]' derivation='Sum' name='[sum:avg_temps:qk]' pivot='key' type='quantitative' />
            <column-instance column='[generated_elec]' derivation='Sum' name='[sum:generated_elec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_elec]' derivation='Sum' name='[sum:price_elec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:avg_temps:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:generated_elec:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:price_elec:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:avg_temps:qk] + ([bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:generated_elec:qk] + [bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[fVal:sum:price_elec:qk]))</rows>
        <cols>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
    <worksheet name='ts forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Forecast of electricity price ($) per state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather_state_price (heatwave)' name='bigquery.0z84mge1faeh9h1d5xo800b2kgn1' />
          </datasources>
          <datasource-dependencies datasource='bigquery.0z84mge1faeh9h1d5xo800b2kgn1'>
            <column caption='Avg Temp' datatype='real' name='[avg_temp]' role='measure' type='quantitative' />
            <column aggregation='Count' caption='Date' datatype='date' datatype-customized='true' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[avg_temp]' derivation='Sum' forecast-column-base='[sum:avg_temp:qk]' forecast-column-type='forecast-value' name='[fVal:sum:avg_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_elec]' derivation='Sum' forecast-column-base='[sum:price_elec:qk]' forecast-column-type='forecast-value' name='[fVal:sum:price_elec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Price Elec' datatype='real' name='[price_elec]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_temp]' derivation='Sum' name='[sum:avg_temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price_elec]' derivation='Sum' name='[sum:price_elec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[fVal:sum:avg_temp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[fVal:sum:price_elec:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[fVal:sum:avg_temp:qk] + [bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[fVal:sum:price_elec:qk])</rows>
        <cols>([bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk] * [bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[tmn:date:qk])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='2' range-type='next' show-prediction-bands='true' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='batch - elec price'>
      <layout-options>
        <title>
          <formatted-text>
            <run>W205 - heatwave effect on electricity in US</run>
            <run bold='false' fontsize='10'>&#10;Manuel Moreno, Diana Lopez Rodenberger, Olivier Zimmer</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='19' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='7000' id='15' type='title' w='100000' x='0' y='0' />
                <zone h='93000' id='14' param='vert' type='layout-flow' w='100000' x='0' y='7000'>
                  <zone h='93000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='7000'>
                    <zone h='93000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='7000'>
                      <zone h='93000' id='3' type='layout-basic' w='51200' x='0' y='7000'>
                        <zone h='46500' id='8' name='correlation' show-title='true' w='51200' x='0' y='53500' />
                        <zone h='46500' id='23' name='geo' show-title='true' w='51200' x='0' y='7000' />
                      </zone>
                      <zone fixed-size='488' h='93000' id='4' is-fixed='true' param='vert' type='layout-flow' w='48800' x='51200' y='7000'>
                        <zone h='37500' id='9' name='correlation and temp' show-title='true' w='48800' x='51200' y='7000'>
                          <layout-cache minheight='163' minwidth='143' type-h='scalable' type-w='scalable' />
                        </zone>
                        <zone h='55000' id='10' name='ts forecast' show-title='true' w='48800' x='51200' y='44500'>
                          <layout-cache minheight='303' minwidth='444' type-h='scalable' type-w='scalable' />
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='batch - outage'>
      <style />
      <size maxheight='1100' maxwidth='900' minheight='1100' minwidth='900' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='3637' id='17' type='title' w='100000' x='0' y='0' />
            <zone h='96363' id='15' param='horz' type='layout-flow' w='100000' x='0' y='3637'>
              <zone h='96363' id='5' param='horz' type='layout-flow' w='100000' x='0' y='3637'>
                <zone fixed-size='434' h='96363' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='3637'>
                  <zone h='30729' id='7' name='outage TS' show-title='true' w='50000' x='0' y='3637' />
                  <zone h='23555' id='8' name='outage TS per state' show-title='true' w='100000' x='0' y='34366' />
                  <zone h='30729' id='12' name='correlation outage' show-title='true' w='50000' x='50000' y='3637' />
                  <zone h='42079' id='13' name='outage forecast' show-title='true' w='100000' x='0' y='57921' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='4545' id='16' name='outage forecast' pane-specification-id='1' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' type='color' w='15556' x='84000' y='56455' />
      </zones>
    </dashboard>
    <dashboard name='stream - demo'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='weather_state_price_outage (heatwave)' name='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41' />
      </datasources>
      <datasource-dependencies datasource='bigquery.0yfh7tq1ssro2z1amyazv0ggmg41'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='9' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='7' name='stream - temp' show-title='true' w='84000' x='0' y='0' />
              <zone h='50000' id='14' name='stream - outage ' show-title='true' w='42000' x='0' y='50000' />
              <zone h='50000' id='16' name='stream - sales electricity' show-title='true' w='42000' x='42000' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='6625' id='12' mode='checkdropdown' name='stream - temp' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]' type='filter' w='16000' x='84000' y='0' />
              <zone h='7875' id='13' name='stream - temp' pane-specification-id='1' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' type='color' w='16000' x='84000' y='6625' />
              <zone h='7250' id='15' name='stream - outage ' pane-specification-id='0' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' type='color' w='16000' x='84000' y='14500' />
              <zone h='7250' id='17' name='stream - sales electricity' pane-specification-id='0' param='[bigquery.0rval2611a1rt018zcsu10kshrx8].[max:preds:qk]' type='color' w='16000' x='84000' y='21750' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='108'>
    <window class='dashboard' name='batch - outage'>
      <viewpoints>
        <viewpoint name='correlation outage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='outage TS'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='outage TS per state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='outage forecast'>
          <zoom type='entire-view' />
          <highlight field='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='batch - elec price'>
      <viewpoints>
        <viewpoint name='correlation' />
        <viewpoint name='correlation and temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='geo'>
          <current-page>
            <multibucket>
              <bucket>1</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ts forecast'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='stream - demo'>
      <viewpoints>
        <viewpoint name='stream - outage '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='stream - sales electricity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='stream - temp'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='correlation and temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.17kdwy20fooqbs1dx2bb41h461lj].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='correlation outage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[mn:date:ok]</field>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]</field>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[qr:date:ok]</field>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='geo'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[avg:avg_temp:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[avg:avg_temp:qk]</field>
            <field>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[mn:date:ok]</field>
            <field>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[qr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='outage TS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[yr:date_event_began:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='outage TS per state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]' type='size' />
            <card pane-specification-id='0' param='[textscan.1e9d30q0keyo9116m4eh91gbivbc].[sum:num_customers_affected:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:year:ok]</field>
            <field>[textscan.1e9d30q0keyo9116m4eh91gbivbc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='outage forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]</field>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='stream - outage '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[sum:customers_outage:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='stream - sales electricity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[bigquery.0rval2611a1rt018zcsu10kshrx8].[max:preds:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0rval2611a1rt018zcsu10kshrx8].[max:preds:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='stream - temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[none:state:nk]</field>
            <field>[bigquery.0yfh7tq1ssro2z1amyazv0ggmg41].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='ts forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[none:state:nk]</field>
            <field>[bigquery.0z84mge1faeh9h1d5xo800b2kgn1].[tmn:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='batch - outage' width='384'>
      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
      4u/u7iYuLo5Zs2ZN+fEMKwDmzJkzRBUwlf70nzhGO4kEJy8FbslUEP2jlyYjo6ms9N03t08e
      FAEEI2gA/UxAQQGuCoDxx+v10tbWRmVlJe3t7ZhMplBqhls904Df76elpYXW1tZbZuIPMqwA
      uFXVr4nE7ZPR9Dq0rjZDDEf/yebqletwWJ0eOp1eppnDJv13CZqAdJKADMhMrBDzyXLovnl8
      ftzewfd9aCdwnwnI5+8TIP3/VRlbgkntKisrqa6uRpZlMjIyJjw1w3jh9/tpb2+nra2NmJgY
      Zs6ciSRJt8zkD0ypusu3HB6fjF4joteIQ65EhzsniO8a2Sv786s9FXzpDyeo75z84uBBE5BR
      J6HICsoEazH9TVABDWDwPRzaCRz4VyP2RQF5blENwG65wradewCFQ++8wYsvvEhVs5Xf//QJ
      6rp94Hfw6189z+h2pow9breb+vp69u7dy969e2lpaWH+/Pls3LiRoqIiYmNjb+nJX5ZlLBYL
      ZWVluN1u8vLySE1NvaUm/iBj4pnY+/Yr1HV6KFh8Fxe2vciaL32XDJObX//6Vb70949za/rw
      R8bj96PTSEPGog9/Tn8BMPLkqSgKJY3dVLXZabT2kBE7uepyMJWFQauhx+thoqfOwQJgCBPQ
      NfYBaCUh5LgOmYBGKYinCqeOH6Csysd9azs5UdfDFz62hJfeO4StvYEjhy6gz+jmaGkTX5zA
      PsmyjNVqpaamhrq6OkRRZPr06RQUFJCQkDDpmutY0dXVRVNTU6iWwHjl6LlR3D6Z4kut7LvU
      RkKkno8WpZEeEzZspPMYCAAfx/YfJ6GwEK1Bh83WyaF9x5CTHJyt6ZhgA8HE4vYGNABR7HNI
      jlSKrr+guFb++iDdPT66e7zICtS0O1g6hhWVboTgBBymk7DYJz6fUXDzHQTuv2tIE9C1ooDE
      UJ9dvY77ocxIU5lV9zxC1W//DIoPfVg4YZHRyD4nMdMX0dNwmvctYSwvDOysbW9vB8DpdOJy
      jW0+fgCrNRDF09bWhkajITExkXnz5mE2m9Fqtfh8Ptzu0W2SHCvkXnXP5xu7Hd4Wi4WOjg7C
      w8NJSEgI+S3639PxaHc0+Hw+XC4XPlnhyeLLdNhdLJ4WQ6fTw7+8dY5vrJtBXuLQyTzHQADI
      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
      gvD4M6rB/wfUmZM+QnqQDwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='batch - elec price' width='384'>
      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
      Q6pBU3j55Zc42N7NxR+5hkT7Duv9X3D2lLzfi3ffmcO0mbOI7N1Ca5/E2ZPHsvu9zezpcTH7
      f36EpsPsW39ASf0oPvnRf2Lu3NeQvEGuvfYqHrzvPkrqR/GZT/8rm1bNt74vzcOGApCItPL3
      l97h//1XI68u3c5vfn4rN33l63zkiku489YfsWmfyldy/o7+/IffMXfRcpqmXYPW18Ps2b/h
      E1+8iQKfzMhRo/nOzb/mtt/8Eo+zBnc4hfT7+m3fvYeLLrwYt9tDWVkRv73tVwwfM4m1i19j
      wYq1vPDci4wYM5GQS2PuolVMO/t85jz1CBt3tZHo2c8Df3rSulYwHCLWeYj7//hnSsrKKCyp
      pKF2CEqyl317dzH79t8zcdrZvP7Ewyxevpa3V25kQksD9z/8SNaYKmvqqA5L/O4PD/PQvXfR
      1quzf9sann7tbYrCAZpHj0dSIrwydz5/+eNDzHlzAY8++gS7N67kyVcWUlbs51e//i1PPvp/
      WeNcPH8OwYoGdm1YxpLVmwCQbbXsA/4AWrSVX91xHxVV1fz1gd+xat0WFq3aRFWRj7eWrqPY
      b/CPV15n5aL5FFY2Ej2wlWeef4Gf/eyXhEsrmPPcX3ln+SpefPVNJk6dRv3QatyyxILXnmfl
      ln3W+Dv3bmfthq30dbcyf+EK3tuwhu0HIpw9dTJ3z/45uruANUvm8Opby1MvxeUmXBBgx8bV
      PPvS66xdsZikK0SyfRevzVvKH357G6GqRqrKirI/YJfCz3/0Q155awlSepo956WneHvFRvwk
      uPveB7hr9v9Q3thC08hhlNs+t8UL5uIKVzBh4gQO7trCpjXLeeCvLzLjnHMoKwqjJHs52BW3
      nqnYY/D408+z+O15HOrKbqM35+Vn2bzrEPU15dZ3avzYJlYuX82cl55k5ZYDTJ86EVeiK+v9
      bz8Yzfu9iHUeZO78Rbzw3BMYcmom39A8hsYinZt/Mpu2SJzy0iIahzdTXFpEwOtm9dK3eWPB
      Smv7jjVvZ31fRFm4jWtXUTakgdb2Q9TUDyMQKKCs2E1HT5Lv/ugWvKRSabZv3cCbb86ls6eP
      j/3bfzK6sQaA9e8uoyuh8/Sf/8DDj72IJ1hCWO5i64dQ3vekoXTz/e/dhmImuO/OO7lr9m9Y
      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
    </thumbnail>
    <thumbnail height='384' name='stream - demo' width='384'>
      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
      oDqEAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
